{"version":3,"file":"index.js","sources":["../src/RefCountCache.ts","../src/ImageSlicer.ts","../src/ImagePool.ts","../src/LoadImagePlugin.ts","../src/index.ts"],"sourcesContent":["export class RefCountCache<CacheValue, CounterValue> {\n  private cacheStore = new Map<\n    string,\n    { value: CacheValue; counter: Set<CounterValue> }\n  >();\n\n  onRefAdded(ref: CounterValue) {}\n\n  has(key: string) {\n    return this.cacheStore.has(key);\n  }\n\n  put(key: string, item: CacheValue, ref: CounterValue) {\n    if (this.cacheStore.has(key)) {\n      return false;\n    }\n\n    this.cacheStore.set(key, {\n      value: item,\n      counter: new Set([ref]),\n    });\n    this.onRefAdded(ref);\n\n    return true;\n  }\n\n  get(key: string, ref: CounterValue) {\n    const cacheItem = this.cacheStore.get(key);\n    if (!cacheItem) {\n      return null;\n    }\n\n    if (!cacheItem.counter.has(ref)) {\n      cacheItem.counter.add(ref);\n      this.onRefAdded(ref);\n    }\n\n    return cacheItem.value;\n  }\n\n  update(key: string, value: CacheValue, ref: CounterValue) {\n    const cacheItem = this.cacheStore.get(key);\n    if (!cacheItem) {\n      return false;\n    }\n\n    cacheItem.value = { ...cacheItem.value, ...value };\n    if (!cacheItem.counter.has(ref)) {\n      cacheItem.counter.add(ref);\n      this.onRefAdded(ref);\n    }\n\n    return true;\n  }\n\n  release(key: string, ref: CounterValue) {\n    const cacheItem = this.cacheStore.get(key);\n    if (!cacheItem) {\n      return false;\n    }\n\n    cacheItem.counter.delete(ref);\n\n    if (cacheItem.counter.size <= 0) {\n      this.cacheStore.delete(key);\n    }\n\n    return true;\n  }\n\n  releaseRef(ref: CounterValue) {\n    Array.from(this.cacheStore.keys()).forEach((key) => {\n      this.release(key, ref);\n    });\n  }\n\n  getSize() {\n    return this.cacheStore.size;\n  }\n\n  clear() {\n    this.cacheStore.clear();\n  }\n}\n","const tasks: (() => void)[] = [];\nlet nextFrameTasks: (() => void)[] = [];\n\ninterface API {\n  requestAnimationFrame: typeof requestAnimationFrame;\n  cancelAnimationFrame: typeof cancelAnimationFrame;\n  createCanvas: () => HTMLCanvasElement | OffscreenCanvas;\n}\n\nexport interface SliceResult {\n  tileSize: [number, number];\n  /** [rows, cols] */\n  gridSize: [number, number];\n  /**\n   * @example\n   * ```\n   * [\n   *  // tileY=0\n   *  [tileX=0, tileX=1, ...],\n   *  // tileY=1\n   *  [tileX=0, tileX=1, ...],\n   * ]\n   * ```\n   */\n  tiles: (null | {\n    x: number;\n    y: number;\n    tileX: number;\n    tileY: number;\n    data: HTMLCanvasElement | OffscreenCanvas;\n  })[][];\n}\n\nexport class ImageSlicer {\n  static api: API;\n  static TASK_NUM_PER_FRAME = 10;\n  static rafId: ReturnType<typeof requestAnimationFrame>;\n\n  static stop(api = ImageSlicer.api) {\n    if (ImageSlicer.rafId) {\n      api.cancelAnimationFrame(ImageSlicer.rafId);\n      ImageSlicer.rafId = null;\n    }\n  }\n\n  static executeTask(api = ImageSlicer.api) {\n    if (tasks.length <= 0 && nextFrameTasks.length <= 0) {\n      return;\n    }\n\n    nextFrameTasks.forEach((task) => task());\n    nextFrameTasks = tasks.splice(0, ImageSlicer.TASK_NUM_PER_FRAME);\n\n    ImageSlicer.rafId = api.requestAnimationFrame(() => {\n      ImageSlicer.executeTask(api);\n    });\n  }\n\n  static sliceImage(\n    image: HTMLImageElement,\n    sliceWidth: number,\n    sliceHeight: number,\n    rerender: () => void,\n    overlap = 0,\n    api = ImageSlicer.api,\n  ) {\n    const imageWidth = image.naturalWidth || image.width;\n    const imageHeight = image.naturalHeight || image.height;\n\n    // 计算步长(考虑重叠区域)\n    const strideW = sliceWidth - overlap;\n    const strideH = sliceHeight - overlap;\n\n    // 计算网格尺寸\n    const gridCols = Math.ceil(imageWidth / strideW);\n    const gridRows = Math.ceil(imageHeight / strideH);\n\n    const result: SliceResult = {\n      tileSize: [sliceWidth, sliceHeight],\n      gridSize: [gridRows, gridCols],\n      tiles: Array(gridRows)\n        .fill(null)\n        .map(() => Array(gridCols).fill(null) as SliceResult['tiles'][number]),\n    };\n\n    // 遍历网格创建切片\n    for (let row = 0; row < gridRows; row++) {\n      for (let col = 0; col < gridCols; col++) {\n        tasks.push(() => {\n          // 计算当前切片的坐标\n          const startX = col * strideW;\n          const startY = row * strideH;\n\n          // 处理最后一列/行的特殊情况\n          const [tempSliceWidth, tempSliceHeight] = [\n            Math.min(sliceWidth, imageWidth - startX),\n            Math.min(sliceHeight, imageHeight - startY),\n          ];\n\n          // 创建切片canvas\n          const sliceCanvas = api.createCanvas();\n          sliceCanvas.width = sliceWidth;\n          sliceCanvas.height = sliceHeight;\n          const sliceCtx = sliceCanvas.getContext('2d');\n\n          // 将图像部分绘制到切片canvas上\n          sliceCtx.drawImage(\n            image,\n            startX,\n            startY,\n            tempSliceWidth,\n            tempSliceHeight,\n            0,\n            0,\n            tempSliceWidth,\n            tempSliceHeight,\n          );\n\n          // 存储切片信息\n          result.tiles[row][col] = {\n            x: startX,\n            y: startY,\n            tileX: col,\n            tileY: row,\n            data: sliceCanvas,\n          };\n\n          rerender();\n        });\n      }\n    }\n\n    ImageSlicer.stop();\n    ImageSlicer.executeTask();\n\n    return result;\n  }\n}\n","import {\n  DisplayObject,\n  GradientType,\n  LinearGradient,\n  Pattern,\n  RadialGradient,\n  Rect,\n  Tuple3Number,\n  UnitType,\n  computeLinearGradient,\n  computeRadialGradient,\n  parseTransform,\n  parsedTransformToMat4,\n  Image,\n  OffscreenCanvasCreator,\n  ElementEvent,\n  type CanvasContext,\n  type GlobalRuntime,\n} from '@antv/g-lite';\nimport { isString } from '@antv/util';\nimport { mat4 } from 'gl-matrix';\nimport { RefCountCache } from './RefCountCache';\nimport { type SliceResult, ImageSlicer } from './ImageSlicer';\n\nexport interface ImageCache extends Partial<SliceResult> {\n  img: HTMLImageElement;\n  /** [width, height] */\n  size: [number, number];\n  downSampled?: ImageBitmap | HTMLImageElement;\n  downSamplingRate?: number;\n}\n\nconst IMAGE_CACHE = new RefCountCache<ImageCache, DisplayObject>();\nIMAGE_CACHE.onRefAdded = function onRefAdded(\n  this: RefCountCache<ImageCache, DisplayObject>,\n  ref,\n) {\n  ref.addEventListener(\n    ElementEvent.DESTROY,\n    () => {\n      this.releaseRef(ref);\n    },\n    { once: true },\n  );\n};\n\nexport type GradientParams = (LinearGradient & RadialGradient) & {\n  width: number;\n  height: number;\n  /**\n   * Top-left corner\n   */\n  min: [number, number];\n  type: GradientType;\n};\n\nexport class ImagePool {\n  static isSupportTile = !!OffscreenCanvasCreator.createCanvas();\n  private gradientCache: Record<string, CanvasGradient> = {};\n  private patternCache: Record<string, CanvasPattern> = {};\n\n  constructor(\n    public context: CanvasContext,\n    private runtime: GlobalRuntime,\n  ) {}\n\n  getImageSync(\n    src: Image['attributes']['src'],\n    ref: DisplayObject,\n    callback?: (cache: ImageCache) => void,\n  ): ImageCache | null {\n    const imageSource = isString(src) ? src : src.src;\n\n    if (IMAGE_CACHE.has(imageSource)) {\n      const imageCache = IMAGE_CACHE.get(imageSource, ref);\n\n      if (imageCache.img.complete) {\n        callback?.(imageCache);\n\n        return imageCache;\n      }\n    }\n\n    this.getOrCreateImage(src, ref)\n      .then((cache) => {\n        callback?.(cache);\n      })\n      .catch((reason) => {\n        console.error(reason);\n      });\n\n    return null;\n  }\n\n  getOrCreateImage(\n    src: Image['attributes']['src'],\n    ref: DisplayObject,\n  ): Promise<ImageCache> {\n    const imageSource = isString(src) ? src : src.src;\n\n    if (!isString(src) && !IMAGE_CACHE.has(imageSource)) {\n      const imageCache: ImageCache = {\n        img: src,\n        size: [src.naturalWidth || src.width, src.naturalHeight || src.height],\n        tileSize: calculateImageTileSize(src),\n      };\n\n      IMAGE_CACHE.put(imageSource, imageCache, ref);\n    }\n\n    if (IMAGE_CACHE.has(imageSource)) {\n      const imageCache = IMAGE_CACHE.get(imageSource, ref);\n\n      if (imageCache.img.complete) {\n        return Promise.resolve(imageCache);\n      }\n\n      return new Promise((resolve, reject) => {\n        imageCache.img.addEventListener('load', () => {\n          imageCache.size = [\n            imageCache.img.naturalWidth || imageCache.img.width,\n            imageCache.img.naturalHeight || imageCache.img.height,\n          ];\n          imageCache.tileSize = calculateImageTileSize(imageCache.img);\n          resolve(imageCache);\n        });\n\n        imageCache.img.addEventListener('error', (ev) => {\n          reject(ev);\n        });\n      });\n    }\n\n    return new Promise((resolve, reject) => {\n      // @see https://github.com/antvis/g/issues/938\n      const image = this.context.config.createImage();\n\n      if (image) {\n        const imageCache: ImageCache = {\n          img: image,\n          size: [0, 0],\n          tileSize: calculateImageTileSize(image),\n        };\n\n        IMAGE_CACHE.put(imageSource, imageCache, ref);\n\n        image.onload = () => {\n          imageCache.size = [\n            image.naturalWidth || image.width,\n            image.naturalHeight || image.height,\n          ];\n          imageCache.tileSize = calculateImageTileSize(imageCache.img);\n          resolve(imageCache);\n        };\n        image.onerror = (ev) => {\n          reject(ev);\n        };\n        image.crossOrigin = 'Anonymous';\n        image.src = imageSource;\n      }\n    });\n  }\n\n  async createDownSampledImage(\n    src: Image['attributes']['src'],\n    ref: DisplayObject,\n  ): Promise<ImageCache> {\n    const imageCache = await this.getOrCreateImage(src, ref);\n    if (typeof imageCache.downSamplingRate !== 'undefined') {\n      return imageCache;\n    }\n\n    const { enableLargeImageOptimization } = this.context.config;\n    const { maxDownSampledImageSize = 2048, downSamplingRateThreshold = 0.5 } =\n      typeof enableLargeImageOptimization === 'boolean'\n        ? {}\n        : enableLargeImageOptimization;\n    const createImageBitmapFunc = this.runtime.globalThis\n      .createImageBitmap as typeof createImageBitmap;\n    const [originWidth, originHeight] = imageCache.size;\n    let resizedImage: ImageCache['downSampled'] = imageCache.img;\n    let downSamplingRate = Math.min(\n      (maxDownSampledImageSize + maxDownSampledImageSize) /\n        (originWidth + originHeight),\n      Math.max(0.01, Math.min(downSamplingRateThreshold, 0.5)),\n    );\n\n    let updateCache: ImageCache = {\n      ...imageCache,\n      downSamplingRate,\n    };\n\n    IMAGE_CACHE.update(imageCache.img.src, updateCache, ref);\n\n    if (createImageBitmapFunc) {\n      try {\n        resizedImage = await createImageBitmapFunc(imageCache.img, {\n          resizeWidth: originWidth * downSamplingRate,\n          resizeHeight: originHeight * downSamplingRate,\n        });\n      } catch {\n        downSamplingRate = 1;\n      }\n    } else {\n      downSamplingRate = 1;\n    }\n\n    updateCache = {\n      ...this.getImageSync(src, ref),\n      downSampled: resizedImage,\n      downSamplingRate,\n    };\n\n    IMAGE_CACHE.update(imageCache.img.src, updateCache, ref);\n\n    return updateCache;\n  }\n\n  async createImageTiles(\n    src: Image['attributes']['src'],\n    tiles: [number, number][],\n    rerender: () => void,\n    ref: DisplayObject,\n  ): Promise<ImageCache> {\n    const imageCache = await this.getOrCreateImage(src, ref);\n    const { requestAnimationFrame, cancelAnimationFrame } =\n      ref.ownerDocument.defaultView;\n\n    ImageSlicer.api = {\n      requestAnimationFrame,\n      cancelAnimationFrame,\n      createCanvas: () => OffscreenCanvasCreator.createCanvas(),\n    };\n\n    const updateCache: ImageCache = {\n      ...imageCache,\n      ...ImageSlicer.sliceImage(\n        imageCache.img,\n        imageCache.tileSize[0],\n        imageCache.tileSize[0],\n        rerender,\n      ),\n    };\n\n    IMAGE_CACHE.update(imageCache.img.src, updateCache, ref);\n\n    return updateCache;\n  }\n\n  releaseImage(src: Image['attributes']['src'], ref: DisplayObject) {\n    IMAGE_CACHE.release(isString(src) ? src : src.src, ref);\n  }\n\n  releaseImageRef(ref: DisplayObject) {\n    IMAGE_CACHE.releaseRef(ref);\n  }\n\n  getOrCreatePatternSync(\n    object: DisplayObject,\n    pattern: Pattern,\n    context: CanvasRenderingContext2D,\n    $offscreenCanvas: HTMLCanvasElement,\n    dpr: number,\n    min: Tuple3Number,\n    callback: () => void,\n  ) {\n    const patternKey = this.generatePatternKey(pattern);\n    if (patternKey && this.patternCache[patternKey]) {\n      return this.patternCache[patternKey];\n    }\n\n    const { image, repetition, transform } = pattern;\n    let src: CanvasImageSource;\n    let needScaleWithDPR = false;\n    // Image URL\n    if (isString(image)) {\n      const imageCache = this.getImageSync(image, object, callback);\n      src = imageCache?.img;\n    } else if ($offscreenCanvas) {\n      src = $offscreenCanvas;\n      needScaleWithDPR = true;\n    } else {\n      src = image as CanvasImageSource;\n    }\n\n    // @see https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/createPattern\n    const canvasPattern = src && context.createPattern(src, repetition);\n\n    if (canvasPattern) {\n      let mat: mat4;\n      // @see https://developer.mozilla.org/en-US/docs/Web/API/CanvasPattern/setTransform\n      if (transform) {\n        mat = parsedTransformToMat4(\n          parseTransform(transform),\n          new DisplayObject({}),\n        );\n      } else {\n        mat = mat4.identity(mat4.create());\n      }\n\n      if (needScaleWithDPR) {\n        mat4.scale(mat, mat, [1 / dpr, 1 / dpr, 1]);\n      }\n\n      canvasPattern.setTransform({\n        a: mat[0],\n        b: mat[1],\n        c: mat[4],\n        d: mat[5],\n        e: mat[12] + min[0],\n        f: mat[13] + min[1],\n      });\n    }\n\n    if (patternKey && canvasPattern) {\n      this.patternCache[patternKey] = canvasPattern;\n    }\n\n    return canvasPattern;\n  }\n\n  getOrCreateGradient(\n    params: GradientParams,\n    context: CanvasRenderingContext2D,\n  ) {\n    const key = this.generateGradientKey(params);\n    const { type, steps, min, width, height, angle, cx, cy, size } = params;\n\n    if (this.gradientCache[key]) {\n      return this.gradientCache[key];\n    }\n\n    let gradient: CanvasGradient | null = null;\n    if (type === GradientType.LinearGradient) {\n      const { x1, y1, x2, y2 } = computeLinearGradient(\n        min,\n        width,\n        height,\n        angle,\n      );\n      // @see https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/createLinearGradient\n      gradient = context.createLinearGradient(x1, y1, x2, y2);\n    } else if (type === GradientType.RadialGradient) {\n      const { x, y, r } = computeRadialGradient(\n        min,\n        width,\n        height,\n        cx,\n        cy,\n        size,\n      );\n      // @see https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/createRadialGradient\n      gradient = context.createRadialGradient(x, y, 0, x, y, r);\n    }\n\n    if (gradient) {\n      steps.forEach(({ offset, color }) => {\n        if (offset.unit === UnitType.kPercentage) {\n          gradient?.addColorStop(offset.value / 100, color.toString());\n        }\n      });\n\n      this.gradientCache[key] = gradient;\n    }\n\n    return this.gradientCache[key];\n  }\n\n  private generateGradientKey(params: GradientParams): string {\n    const { type, min, width, height, steps, angle, cx, cy, size } = params;\n    return `gradient-${type}-${angle?.toString() || 0}-${cx?.toString() || 0}-${\n      cy?.toString() || 0\n    }-${size?.toString() || 0}-${min[0]}-${min[1]}-${width}-${height}-${steps\n      .map(({ offset, color }) => `${offset}${color}`)\n      .join('-')}`;\n  }\n\n  private generatePatternKey(pattern: Pattern) {\n    const { image, repetition } = pattern;\n    // only generate cache for Image\n    if (isString(image)) {\n      return `pattern-${image}-${repetition}`;\n    }\n    if ((image as Rect).nodeName === 'rect') {\n      return `pattern-${(image as Rect).entity}-${repetition}`;\n    }\n  }\n}\n\nfunction calculateImageTileSize(img: HTMLImageElement): [number, number] {\n  if (!img.complete) {\n    return [0, 0];\n  }\n\n  const [width, height] = [\n    img.naturalWidth || img.width,\n    img.naturalHeight || img.height,\n  ];\n\n  let tileSize = 256;\n\n  [256, 512].forEach((size) => {\n    const rows = Math.ceil(height / size);\n    const cols = Math.ceil(width / size);\n\n    if (rows * cols < 1e3) {\n      tileSize = size;\n    }\n  });\n\n  return [tileSize, tileSize];\n}\n","import type {\n  FederatedEvent,\n  Image,\n  MutationEvent,\n  RenderingPlugin,\n  RenderingPluginContext,\n  DisplayObject,\n} from '@antv/g-lite';\nimport { ElementEvent, Shape } from '@antv/g-lite';\nimport { isString } from '@antv/util';\nimport { ImagePool } from './ImagePool';\n\nexport class LoadImagePlugin implements RenderingPlugin {\n  static tag = 'LoadImage';\n\n  apply(context: RenderingPluginContext & { imagePool: ImagePool }) {\n    const { renderingService, renderingContext, imagePool } = context;\n    const canvas = renderingContext.root.ownerDocument.defaultView;\n\n    const calculateWithAspectRatio = (\n      object: Image,\n      imageWidth: number,\n      imageHeight: number,\n    ) => {\n      const { width, height } = object.parsedStyle;\n      if (width && !height) {\n        object.setAttribute('height', (imageHeight / imageWidth) * width);\n      } else if (!width && height) {\n        object.setAttribute('width', (imageWidth / imageHeight) * height);\n      }\n    };\n\n    const handleMounted = (e: FederatedEvent) => {\n      const object = e.target as Image;\n      const { nodeName, attributes } = object;\n      if (nodeName === Shape.IMAGE) {\n        const { src, keepAspectRatio } = attributes;\n\n        imagePool.getImageSync(\n          src,\n          object as DisplayObject,\n          ({ img: { width, height } }) => {\n            if (keepAspectRatio) {\n              calculateWithAspectRatio(object, width, height);\n            }\n\n            // set dirty rectangle flag\n            object.renderable.dirty = true;\n            renderingService.dirtify();\n          },\n        );\n      }\n    };\n\n    const handleAttributeChanged = (e: MutationEvent) => {\n      const object = e.target as Image;\n      const { attrName, prevValue, newValue } = e;\n\n      if (object.nodeName !== Shape.IMAGE || attrName !== 'src') {\n        return;\n      }\n\n      if (prevValue !== newValue) {\n        imagePool.releaseImage(\n          prevValue as Image['attributes']['src'],\n          object as DisplayObject,\n        );\n      }\n\n      if (isString(newValue)) {\n        imagePool\n          .getOrCreateImage(newValue, object as DisplayObject)\n          .then(({ img: { width, height } }) => {\n            if (object.attributes.keepAspectRatio) {\n              calculateWithAspectRatio(object, width, height);\n            }\n\n            // set dirty rectangle flag\n            object.renderable.dirty = true;\n            renderingService.dirtify();\n          })\n          .catch(() => {\n            //\n          });\n      }\n    };\n\n    renderingService.hooks.init.tap(LoadImagePlugin.tag, () => {\n      canvas.addEventListener(ElementEvent.MOUNTED, handleMounted);\n      canvas.addEventListener(\n        ElementEvent.ATTR_MODIFIED,\n        handleAttributeChanged,\n      );\n    });\n\n    renderingService.hooks.destroy.tap(LoadImagePlugin.tag, () => {\n      canvas.removeEventListener(ElementEvent.MOUNTED, handleMounted);\n      canvas.removeEventListener(\n        ElementEvent.ATTR_MODIFIED,\n        handleAttributeChanged,\n      );\n    });\n  }\n}\n","import { AbstractRendererPlugin, type GlobalRuntime } from '@antv/g-lite';\nimport { ImagePool, type ImageCache } from './ImagePool';\nimport { LoadImagePlugin } from './LoadImagePlugin';\n\nexport { ImagePool, type ImageCache };\n\nexport class Plugin extends AbstractRendererPlugin {\n  name = 'image-loader';\n  init(runtime: GlobalRuntime): void {\n    // @ts-ignore\n    this.context.imagePool = new ImagePool(this.context, runtime);\n    this.addRenderingPlugin(new LoadImagePlugin());\n  }\n  destroy(): void {\n    this.removeAllRenderingPlugins();\n  }\n}\n"],"names":["RefCountCache","_classCallCheck","cacheStore","Map","_createClass","key","value","onRefAdded","ref","has","put","item","set","counter","Set","get","cacheItem","add","update","_objectSpread","release","size","releaseRef","_this","Array","from","keys","forEach","getSize","clear","tasks","nextFrameTasks","ImageSlicer","stop","api","arguments","length","undefined","rafId","cancelAnimationFrame","executeTask","task","splice","TASK_NUM_PER_FRAME","requestAnimationFrame","sliceImage","image","sliceWidth","sliceHeight","rerender","overlap","imageWidth","naturalWidth","width","imageHeight","naturalHeight","height","strideW","strideH","gridCols","Math","ceil","gridRows","result","tileSize","gridSize","tiles","fill","map","_loop","row","_loop2","col","push","startX","startY","_ref","min","tempSliceWidth","tempSliceHeight","sliceCanvas","createCanvas","sliceCtx","getContext","drawImage","x","y","tileX","tileY","data","IMAGE_CACHE","addEventListener","ElementEvent","DESTROY","once","ImagePool","context","runtime","gradientCache","patternCache","getImageSync","src","callback","imageSource","isString","imageCache","img","complete","getOrCreateImage","then","cache","reason","console","error","_this2","calculateImageTileSize","Promise","resolve","reject","ev","config","createImage","onload","onerror","crossOrigin","_createDownSampledImage","_asyncToGenerator","_regeneratorRuntime","mark","_callee","enableLargeImageOptimization","_ref$maxDownSampledIm","maxDownSampledImageSize","_ref$downSamplingRate","downSamplingRateThreshold","createImageBitmapFunc","_imageCache$size","originWidth","originHeight","resizedImage","downSamplingRate","updateCache","wrap","_callee$","_context","prev","next","sent","abrupt","globalThis","createImageBitmap","_slicedToArray","max","resizeWidth","resizeHeight","t0","downSampled","createDownSampledImage","_x","_x2","apply","_createImageTiles","_callee2","_ref$ownerDocument$de","_callee2$","_context2","ownerDocument","defaultView","OffscreenCanvasCreator","createImageTiles","_x3","_x4","_x5","_x6","releaseImage","releaseImageRef","getOrCreatePatternSync","object","pattern","$offscreenCanvas","dpr","patternKey","generatePatternKey","repetition","transform","needScaleWithDPR","canvasPattern","createPattern","mat","parsedTransformToMat4","parseTransform","DisplayObject","mat4","identity","create","scale","setTransform","a","b","c","d","e","f","getOrCreateGradient","params","generateGradientKey","type","steps","angle","cx","cy","gradient","GradientType","LinearGradient","_computeLinearGradien","computeLinearGradient","x1","y1","x2","y2","createLinearGradient","RadialGradient","_computeRadialGradien","computeRadialGradient","r","createRadialGradient","_ref2","offset","color","unit","UnitType","kPercentage","_gradient","addColorStop","toString","concat","_ref3","join","nodeName","entity","isSupportTile","rows","cols","LoadImagePlugin","renderingService","renderingContext","imagePool","canvas","root","calculateWithAspectRatio","_object$parsedStyle","parsedStyle","setAttribute","handleMounted","target","attributes","Shape","IMAGE","keepAspectRatio","_ref$img","renderable","dirty","dirtify","handleAttributeChanged","attrName","prevValue","newValue","_ref2$img","hooks","init","tap","tag","MOUNTED","ATTR_MODIFIED","destroy","removeEventListener","Plugin","_AbstractRendererPlug","_len","args","_key","_callSuper","name","_inherits","addRenderingPlugin","removeAllRenderingPlugins","AbstractRendererPlugin"],"mappings":"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"}